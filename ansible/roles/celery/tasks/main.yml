---
- name: Update apt cache
  apt: update_cache=yes
  sudo: yes
  tags: celery

- name: Fetch GPG key for docker package
  sudo: yes
  command: apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
  tags:
    - celery
    - deploy-update

- name: Add docker PPA
  sudo: yes
  shell:
    echo 'deb https://apt.dockerproject.org/repo ubuntu-trusty main' | sudo tee /etc/apt/sources.list.d/docker.list creates=/etc/apt/sources.list.d/docker.list
  tags:
    - celery
    - deploy-update

# Install celery and necessary dependencies
- name: Install worker dependencies
  sudo: yes
  apt: update-cache=yes name={{ item }} state=present
  with_items:
    - rabbitmq-server
    - libffi-dev
    - libssl-dev
    - python-pip
    - python-dev
    - git
    - libjpeg-dev
    - libfreetype6-dev
    - zlib1g-dev
    - libpng-dev
    - docker-engine
  tags:
    - celery
    - deploy-update

- name: Enable rabbitmq-server to survive reboot
  service: name=rabbitmq-server enabled=yes
  sudo: yes
  tags: celery

- name: Start docker daemon
  service: name=docker state=started enabled=yes
  sudo: yes
  tags:
    - celery
    - deploy-update

- name: Pull latest covalic metrics Docker image
  sudo: yes
  command: docker pull girder/covalic-metrics:{{ covalic_metrics_version }}
  tags:
    - celery
    - deploy-update

- name: Clone girder_worker
  sudo: yes
  git:
      repo: git://github.com/girder/girder_worker.git
      dest: /opt/girder_worker
      accept_hostkey: yes
      force: yes
      version: "{{ girder_worker_version }}"
  tags:
    - celery
    - deploy-update

- name: Install worker pip dependencies
  pip: requirements=/opt/girder_worker/requirements.txt
  sudo: yes
  tags:
    - celery
    - deploy-update

- name: Install girder_io plugin pip dependencies
  pip: requirements=/opt/girder_worker/girder_worker/plugins/girder_io/requirements.txt
  sudo: yes
  tags:
    - celery
    - deploy-update

- name: Create local worker config file
  sudo: yes
  template:
    src: worker.local.cfg.j2
    dest: /opt/girder_worker/girder_worker/worker.local.cfg
    mode: 0644
    owner: "{{worker_exec_user}}"
    group: "{{worker_exec_group}}"
  tags:
    - celery
    - deploy-update

- name: Change ownership of worker to correct user
  sudo: yes
  file:
    dest: /opt/girder_worker
    owner: "{{worker_exec_user}}"
    group: "{{worker_exec_group}}"
    state: directory
    recurse: yes
  tags:
    - celery
    - deploy-update

- name: Create Docker group
  group: name=docker state=present
  tags: celery

- name: Add worker user to Docker group
  user: shell=/bin/bash
        name={{worker_exec_user}}
        groups=docker
        append=yes
  sudo: yes
  tags: celery

- name: Restart docker daemon
  service: name=docker state=restarted enabled=yes
  sudo: yes
  tags:
    - celery
    - deploy-update

- name: Install celery worker as a service
  template:
      src: celery_worker.conf
      dest: /etc/init/celery_worker.conf
      mode: 644
      owner: root
  sudo: yes
  tags: celery

- name: Restart celery worker as a service
  service: name=celery_worker state=restarted enabled=yes
  sudo: yes
  tags:
    - celery
    - deploy-update
